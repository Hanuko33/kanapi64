diff --git a/H/csoundCore.h b/H/csoundCore.h
index a391c0e..8119beb 100644
--- a/H/csoundCore.h
+++ b/H/csoundCore.h
@@ -731,6 +731,7 @@ extern const uint32_t csPlayScoMask;
     int (*GetMessageLevel)(CSOUND *);
     void (*SetMessageLevel)(CSOUND *, int messageLevel);
     void (*InputMessage)(CSOUND *, const char *message__);
+#undef KeyPress
     void (*KeyPress)(CSOUND *, char c__);
     void (*SetInputValueCallback)(CSOUND *,
                 void (*inputValueCalback)(CSOUND *, const char *channelName,
diff --git a/InOut/virtual_keyboard/SliderBank.hpp b/InOut/virtual_keyboard/SliderBank.hpp
index 03d0cc6..16bf117 100644
--- a/InOut/virtual_keyboard/SliderBank.hpp
+++ b/InOut/virtual_keyboard/SliderBank.hpp
@@ -26,8 +26,8 @@
 
 #include <FL/Fl.H>
 #include <FL/Fl_Group.H>
-#include <Fl/Fl_Value_Slider.H>
-#include <Fl/Fl_Spinner.H>
+#include <FL/Fl_Value_Slider.H>
+#include <FL/Fl_Spinner.H>
 #include "csdl.h"
 #include "SliderData.hpp"
 
diff --git a/InOut/widgets.cpp b/InOut/widgets.cpp
index edc583a..d43e731 100644
--- a/InOut/widgets.cpp
+++ b/InOut/widgets.cpp
@@ -642,7 +642,7 @@ void Fl_Value_Input_Spin::draw(void)
   if (damage()&~FL_DAMAGE_CHILD) input.clear_damage(FL_DAMAGE_ALL);
   input.box(box());
   input.color(FL_WHITE, selection_color());
-  input.draw();
+  //input.draw();
   input.clear_damage();
   sxx+=border_size;
   syy+=border_size;
@@ -890,7 +890,7 @@ void Fl_Value_Slider_Input::draw(void)
   if (damage()&~FL_DAMAGE_CHILD)  input.clear_damage(FL_DAMAGE_ALL);
   input.box(box());
   input.color(FL_WHITE, selection_color());
-  input.draw();
+  //input.draw();
   input.resize(X,Y,W,H);
   input.clear_damage();
   //  if (horizontal())   input.draw();
diff --git a/custom.py b/custom.py
index 2e57e30..b7e72b1 100644
--- a/custom.py
+++ b/custom.py
@@ -10,121 +10,45 @@ import sys
 customCPPPATH = []
 customCCFLAGS = []
 customCXXFLAGS = []
-customLIBS = []
-customLIBPATH = []
-customSHLINKFLAGS = []
+customLIBS = ["rt", "pthread", "dl", "m", "Xt", "X11", "Xext" ]
+customLIBPATH = ["/kanapi_packages/libs" ]
+customSHLINKFLAGS = [ "-L/kanapi_packages/libs" ]
 customSWIGFLAGS = []
 
 if sys.platform[:5] == 'linux':
     platform = 'linux'
-    customCPPPATH.append('/usr/include/fltk-1.1')
-    customLIBPATH.append('/usr/lib/fltk-1.1')
-elif sys.platform == 'darwin':
-    platform = 'darwin'
-    customCPPPATH.append('/usr/include/malloc')
-    customCPPPATH.append('/opt/local/include/boost-1_32/')
-    customCXXFLAGS.append('-fabi-version=0')
-elif sys.platform[:3] == 'win':
-    # For the basic build you need MinGW, MSys, and libsndfile.
-    # Add them here:
-    customCPPPATH.append('c:/msys/1.0/local/include')
-    customLIBPATH.append('c:/msys/1.0/local/lib')
-    customCPPPATH.append('c:/msys/1.0/include')
-    customLIBPATH.append('c:/msys/1.0/lib')
-    # If libsndfile is not in a standard location add it here:
-    #customCPPPATH.append('D:/utah/opt/libsndfile-1_0_17')
-    #customLIBPATH.append('D:/utah/opt/libsndfile-1_0_17')
-    ################################################################
-    # If you want real-time audio you need PortAudio.
-    # If it is not in a standard location add it here
-    # (of course you must build it first):
-    #customCPPPATH.append('D:/utah/opt/portaudio_varga/include')
-    #customLIBPATH.append('D:/utah/opt/lazzarini')
-    ################################################################
-    # If you want PortMidi for real-time midi,
-    # if it is not in a standard location add it here
-    # (of course you must build it first):
-    #customCPPPATH.append('D:/utah/opt/portmidi/pm_common')
-    #customCPPPATH.append('D:/utah/opt/portmidi/pm_win')
-    #customCPPPATH.append('D:/utah/opt/portmidi/porttime')
-    #customLIBPATH.append('D:/utah/opt/portmidi/pm_win')
-    #customLIBPATH.append('D:/utah/opt/portmidi/porttime')
-    #customLIBPATH.append('D:/utah/opt/portmidi')
-    ################################################################
-    # If you want FLTK widgets or if you want to build CsoundVST,
-    # you need FLTK. If it is not in a standard location,
-    # add it here (of course you must build it first):
-    #customCPPPATH.append('D:/utah/opt/fltk-1.1.7')
-    #customLIBPATH.append('D:/utah/opt/csound5/bin')
-    #customLIBPATH.append('D:/utah/opt/fltk-1.1.7/lib')
-    ################################################################
-    # If you want to build CsoundVST you need Python and
-    # a MinGW import library for Python. Add them here:
-    customCPPPATH.append('C:/Python24/include')
-    customLIBPATH.append('C:/Python24/Libs')    
-    #customLIBPATH.append('D:/utah/msys/1.0/local/lib')
-    customCPPPATH.append('C:/Python25/include')
-    customLIBPATH.append('C:/Python25/Libs')    
-    ###############################################################
-    # If you want to build vst4cs you need the include
-    # path to the VST SDK header files. Add them there:
-    #ustomCPPPATH.append('d:/utah/home/mkg/projects/csoundd/frontends/CsoundVST')    
-    ################################################################
-    # If you want to build Lua interfaces you need Lua.
-    # Add it here:
-    #customCPPPATH.append('D:/utah/opt/lua-5.1.1/src')
-    #customLIBPATH.append('D:/utah/opt/lua-5.1.1/src')
-    ################################################################
-    # If you want to build Tcl/Tk interfaces
-    # and Tclcsound you need Tcl/Tk.
-    # Add it here:
-    #customCPPPATH.append('D:/utah/opt/Tcl/include')
-    #customLIBPATH.append('D:/utah/opt/Tcl/bin')
-    ################################################################
-    # If you want to build CsoundVST you need boost.
-    # If it is not in a standard lcoation add it here
-    # (you do NOT need to build it first):
-    # customCPPPATH.append('D:/utah/opt/boost/')
-    ################################################################
-    # If you want to build the FluidSynth opcodes
-    # you need FluidSynth. If it is not a standard location,
-    # add it here (you do NOT need to build it first):
-    #customLIBPATH.append('D:/utah/opt/fluidsynth-1.0.3-win32')
-    #customCPPPATH.append('D:/utah/opt/fluidsynth-1.0.3-win32/include')
-    #customLIBPATH.append('D:/utah/home/mkg/projects/fluid/fluidsynth/src')
-    #customCPPPATH.append('D:/utah/home/mkg/projects/fluid/fluidsynth/include')
-    ################################################################
-    # If you want to build the Java wrapper for CsoundVST
-    # you need Java. If it is not in a standard location,
-    # add it here (you do NOT need to build it first):
-    #customCPPPATH.append('D:/utah/opt/jdk1.5.0/include')
-    # customCPPPATH.append('D:/utah/opt/jdk1.5.0/include/win32')
-    ################################################################
-    # If you want to build the PD external csoundapi~
-    # you need PD. If it is not in a standard location,
-    # add it here (you do NOT need to build it first):
-    #customCPPPATH.append('D:/utah/opt/pd-0.38-4-devel-2/src')
-    #customLIBPATH.append('D:/utah/opt/pd-0.38-4-devel-2/bin')
-    ################################################################
-    # If you want to build the Loris opcodes,
-    # then copy Loris to csound5/Opcodes/Loris. Loris also
-    # requires FFTW, if it is not in a standard location,
-    # add it here (you do need to build it first):
-    #customCPPPATH.append('D:/utah/opt/fftw-3.0.1/api')
-    #customLIBPATH.append('D:/utah/opt/fftw-3.0.1/.libs')
-    ################################################################
-    # If you want to build the OSC opcodes,
-    # if it is not in a standard location,
-    # add it here (you do need to build it first):
-    #customCPPPATH.append('D:/utah/home/mkg/projects/liblo')
-    #customLIBPATH.append('D:/utah/home/mkg/projects/liblo/src/.libs')
-    # For OSC on Windows you will also need a Windows pthread library,
-    # if it is not in a standard location,
-    # add it here (you do need to build it first):
-    #customCPPPATH.append('D:/utah/opt/pthreads')
-    #customLIBPATH.append('D:/utah/opt/pthreads')
-    ################################################################
-    #print "Adding custom path"
-else:
-    platform = 'unsupported platform'
+    customCPPPATH.append('/kanapi_packages/libsndfile-1.0.25/include')
+    customCPPPATH.append('/kanapi_packages/fltk-1.3.2/include')
+    customCPPPATH.append('/kanapi_packages/tcl-8.6.0/include')
+    customCPPPATH.append('/kanapi_packages/portaudio-v19_20111121/include')
+    customCPPPATH.append('/kanapi_packages/boost-1_52_0/include')
+    customCPPPATH.append('/kanapi_packages/fluidsynth-1.1.1/include')
+    customCPPPATH.append('/kanapi_packages/zlib-1.2.7/include')
+    customCPPPATH.append('/kanapi_packages/lua-5.2.1/include')
+    customCPPPATH.append('/kanapi_packages/Python-2.7.3/include/python2.7')
+    customCPPPATH.append('/kanapi_packages/libpng-1.5.13/include')
+    customCPPPATH.append('/kanapi_packages/alsa-lib-1.0.25/include')
+    customCPPPATH.append('/kanapi_packages/xproto-7.0.23/include')
+    customCPPPATH.append('/kanapi_packages/libX11-1.5.0/include')
+    customCPPPATH.append('/kanapi_packages/tk-8.6.0/include')
+    customCPPPATH.append('/kanapi_packages/libXt-1.1.3/include')
+    customCPPPATH.append('/kanapi_packages/libXext-1.3.1/include')
+
+    customLIBPATH.append('/kanapi_packages/libsndfile-1.0.25/lib')
+    customLIBPATH.append('/kanapi_packages/fltk-1.3.2/lib')
+    customLIBPATH.append('/kanapi_packages/tcl-8.6.0/lib')
+    customLIBPATH.append('/kanapi_packages/portaudio-v19_20111121/lib')
+    customLIBPATH.append('/kanapi_packages/boost-1_52_0/lib')
+    customLIBPATH.append('/kanapi_packages/fluidsynth-1.1.1/lib')
+    customLIBPATH.append('/kanapi_packages/zlib-1.2.7/lib')
+    customLIBPATH.append('/kanapi_packages/lua-5.2.1/lib')
+    customLIBPATH.append('/kanapi_packages/Python-2.7.3/lib')
+    customLIBPATH.append('/kanapi_packages/libpng-1.5.13/lib')
+    customLIBPATH.append('/kanapi_packages/alsa-lib-1.0.25/lib')
+    customLIBPATH.append('/kanapi_packages/libX11-1.5.0/lib')
+    customLIBPATH.append('/kanapi_packages/tk-8.6.0/lib')
+    customLIBPATH.append('/kanapi_packages/libXt-1.1.3/lib')
+    customLIBPATH.append('/kanapi_packages/libXext-1.3.1/lib')
+    customLIBPATH.append('/kanapi_packages/pcre-8.32/lib')
+	
 
