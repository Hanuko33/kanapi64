. ../../../cross_compilers/scripts/config.kanapi
. ../../scripts/config.kanapi

KANAPI_CROSS_BASE=${KANAPI_ROOT}/`uname -m`/cross/${KANAPI_TARGET}

if [ "${KANAPI_TARGET}" = "`uname -m`" ]
then
	KANAPI_CROSS=0
	if [ -f ${KANAPI_BASE}/pkg-config-${pkg_config_ver}/bin/pkg-config ]
	then
		export KANAPI_PKGCONFIG=${KANAPI_BASE}/pkg-config-${pkg_config_ver}/bin/pkg-config
	fi
else 	
	KANAPI_CROSS=1
	if [ -f ${KANAPI_CROSS_BASE}/pkg-config-${pkg_config_ver}/bin/pkg-config ]
	then
		export KANAPI_PKGCONFIG=${KANAPI_CROSS_BASE}/pkg-config-${pkg_config_ver}/bin/pkg-config
	fi
fi

if [ "${KANAPI_TARGET}" = "arm" ]
then
	export KANAPI_TARGET_NAME=${KANAPI_TARGET_NAME}eabi
fi


if [ -x ${KANAPI_BASE}/gcc-${gcc_ver}/bin/${KANAPI_TARGET_NAME}-gcc ]
then
	echo "use native compilers"
else
#	echo "use cross compilers"
	export CROSS_GCC_PREFIX="${KANAPI_CROSS_BASE}/gcc-${gcc_ver}"
	export CROSS_BINUTILS_PREFIX="${KANAPI_CROSS_BASE}/binutils-${binutils_ver}"

	if [ -x ${CROSS_GCC_PREFIX}/bin/${KANAPI_TARGET_NAME}-gcc ]
	then
		if [ -f ${CROSS_GCC_PREFIX}/${KANAPI_TARGET_NAME}/lib/libstdc++.so ]
		then
			export CROSS_GCC="${KANAPI_TARGET_NAME}-gcc" 
			export PATH_GCC=${CROSS_GCC_PREFIX}/bin
			export PATH=${PATH_GCC}:${PATH}
		fi
	fi

	if [ -x ${CROSS_GCC_PREFIX}/bin/${KANAPI_TARGET_NAME}-g++ ]
	then
		if [ -f ${CROSS_GCC_PREFIX}/${KANAPI_TARGET_NAME}/lib/libstdc++.so ]
		then
				export CROSS_CXX="${KANAPI_TARGET_NAME}-g++"
		fi
	fi

	if [ -x ${CROSS_BINUTILS_PREFIX}/bin/${KANAPI_TARGET_NAME}-as ]
	then
		export PATH_BIN=${CROSS_BINUTILS_PREFIX}/bin
		export PATH=${PATH_BIN}:${PATH}
	fi
	export LD_LIBRARY_PATH=${KANAPI_CROSS_BASE}/gmp-${gmp_ver}/lib:${KANAPI_CROSS_BASE}/mpfr-${mpfr_ver}/lib:${KANAPI_CROSS_BASE}/mpc-${mpc_ver}/lib
fi

if [ "${KANAPI_CROSS}" = "0" ]
then	
	export PATH=${KANAPI_TARGET_BIN}:${PATH}
fi

